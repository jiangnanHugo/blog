I"—2<p>Notes from Raymond Hettingerâ€™s talk at pycon US 2013ï¼š</p>
<ul>
  <li><a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=OSGv2VnC0go">Transforming Code into Beautiful, Idiomatic Python</a>,</li>
  <li><a href="https://speakerdeck.com/pyconslides/transforming-code-into-beautiful-idiomatic-python-by-raymond-hettinger-1">Transforming code into Beautiful, Idiomatic Python by Raymond Hettinger</a>,</li>
  <li><a href="https://gist.github.com/JeffPaine/6213790">Gist Doc</a>.</li>
</ul>

<h4 id="1-looping-over-a-range-of-numbers">1. Looping over a range of numbers</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># these two for loop method are equal.
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]:</span>
  <span class="k">print</span> <span class="n">i</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
  <span class="k">print</span> <span class="n">i</span>
<span class="c1"># Better method: use xrange in python 2.7; use range in python3
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
  <span class="k">print</span> <span class="n">i</span>
</code></pre></div></div>

<h4 id="2-looping-backward">2. Looping backward</h4>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">'red'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'blue'</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">colors</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">colors</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<span class="c1"># Better method: use reversed
</span><span class="k">for</span> <span class="n">color</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">colors</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">color</span>
</code></pre></div></div>

<h4 id="3-looping-over-collection-and-indices">3. looping over collection and indices</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">'red'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'blue'</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">colors</span><span class="p">)):</span>
    <span class="k">print</span> <span class="n">i</span><span class="p">,</span> <span class="s">'---&gt;'</span><span class="p">,</span> <span class="n">colors</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<span class="c1"># Better Method: use enumerate
</span><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">color</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">colors</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">i</span><span class="p">,</span> <span class="s">'---&gt;'</span><span class="p">,</span> <span class="n">color</span>
</code></pre></div></div>

<h4 id="4-distinguishing-multiple-exit-points-in-loops">4. Distinguishing multiple exit points in loops</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">find</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span> <span class="n">target</span><span class="p">):</span>
    <span class="n">found</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">seq</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">value</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
            <span class="n">found</span> <span class="o">=</span> <span class="bp">True</span>
            <span class="k">break</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">found</span><span class="p">:</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
    <span class="k">return</span> <span class="n">i</span>
<span class="c1">##### Better: use "for else"
</span><span class="k">def</span> <span class="nf">find</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span> <span class="n">target</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">seq</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">value</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span> <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
    <span class="k">return</span> <span class="n">i</span>
</code></pre></div></div>

<h4 id="5-looping-over-dictionary-keys-and-values">5. Looping over dictionary keys and values</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Not very fast, has to re-hash every key and do a lookup
</span><span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
    <span class="k">print</span> <span class="n">k</span><span class="p">,</span> <span class="s">'---&gt;'</span><span class="p">,</span> <span class="n">d</span><span class="p">[</span><span class="n">k</span><span class="p">]</span>
<span class="c1"># Makes a big huge list
</span><span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">d</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">print</span> <span class="n">k</span><span class="p">,</span> <span class="s">'---&gt;'</span><span class="p">,</span> <span class="n">v</span>
<span class="c1"># Better use: iteritems()
</span><span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">d</span><span class="p">.</span><span class="n">iteritems</span><span class="p">():</span>
    <span class="k">print</span> <span class="n">k</span><span class="p">,</span> <span class="s">'---&gt;'</span><span class="p">,</span> <span class="n">v</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">iteritems()</code> is better as it returns an iterator.</p>

<h4 id="6-counting-with-dictionaries">6. Counting with dictionaries</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">'red'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'red'</span><span class="p">,</span> <span class="s">'blue'</span><span class="p">,</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'red'</span><span class="p">]</span>
<span class="c1"># Simple, basic way to count. A good start for beginners.
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{}</span>
<span class="k">for</span> <span class="n">color</span> <span class="ow">in</span> <span class="n">colors</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">color</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span> <span class="n">d</span><span class="p">[</span><span class="n">color</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">d</span><span class="p">[</span><span class="n">color</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="c1"># {'blue': 1, 'green': 2, 'red': 3}
# Slightly more modern but has several caveats, better for advanced users
# who understand the intricacies
</span><span class="n">d</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="k">for</span> <span class="n">color</span> <span class="ow">in</span> <span class="n">colors</span><span class="p">:</span>
  <span class="n">d</span><span class="p">[</span><span class="n">color</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
</code></pre></div></div>

<h4 id="7-grouping-with-dictionaries">7. Grouping with dictionaries</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s">'raymond'</span><span class="p">,</span> <span class="s">'rachel'</span><span class="p">,</span> <span class="s">'matthew'</span><span class="p">,</span> <span class="s">'roger'</span><span class="p">,</span>
         <span class="s">'betty'</span><span class="p">,</span> <span class="s">'melissa'</span><span class="p">,</span> <span class="s">'judith'</span><span class="p">,</span> <span class="s">'charlie'</span><span class="p">]</span>
<span class="c1"># In this example, we're grouping by name length
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{}</span>
<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
    <span class="n">key</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">key</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
        <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
<span class="c1"># {5: ['roger', 'betty'], 6: ['rachel', 'judith'], 7: ['raymond', 'matthew', 'melissa', 'charlie']}
##### Better
</span><span class="n">d</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
    <span class="n">key</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">].</span><span class="n">append</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</code></pre></div></div>
:ET