I"êz<ol>
  <li>import related modules.</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">caffe2.python</span> <span class="kn">import</span> <span class="n">core</span><span class="p">,</span> <span class="n">brew</span><span class="p">,</span> <span class="n">workspace</span><span class="p">,</span> <span class="n">model_helper</span>
<span class="kn">from</span> <span class="nn">caffe2.proto</span> <span class="kn">import</span> <span class="n">caffe2_pb2</span>
<span class="kn">from</span> <span class="nn">caffe2.python.predictor</span> <span class="kn">import</span> <span class="n">mobile_exporter</span>
<span class="kn">from</span> <span class="nn">caffe2.python.optimizer</span> <span class="kn">import</span> <span class="p">(</span><span class="n">build_sgd</span><span class="p">,</span> <span class="n">build_adagrad</span><span class="p">,</span> <span class="n">build_adam</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">itertools</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">core</span><span class="p">.</span><span class="n">GlobalInit</span><span class="p">([</span><span class="s">'caffe2'</span><span class="p">,</span> <span class="s">'--caffe2_log_level=0'</span><span class="p">])</span>
</code></pre></div></div>

<ol>
  <li>create input and label:</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">AddInput</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">,</span> <span class="n">db</span><span class="p">,</span> <span class="n">db_type</span><span class="p">):</span>
    <span class="n">data</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">db_input</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="p">[</span><span class="s">"data"</span><span class="p">,</span> <span class="s">"label"</span><span class="p">],</span> <span class="c1"># attention
</span>                                <span class="n">batch_size</span><span class="o">=</span><span class="n">batch_size</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span>
                                <span class="n">db_type</span><span class="o">=</span><span class="n">db_type</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">data</span><span class="p">,</span> <span class="n">label</span>
</code></pre></div></div>

<ol>
  <li>build model structure.</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">add_mlp_model</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">device_opts</span><span class="p">,</span> <span class="n">sizes</span><span class="o">=</span><span class="p">[</span><span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">10</span><span class="p">]):</span>
    <span class="k">with</span> <span class="n">core</span><span class="p">.</span><span class="n">DeviceScope</span><span class="p">(</span><span class="n">device_opts</span><span class="p">):</span>
        <span class="n">layer</span> <span class="o">=</span> <span class="n">data</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sizes</span><span class="p">)</span> <span class="o">-</span> <span class="mi">2</span><span class="p">):</span>
            <span class="n">layer</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">fc</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">layer</span><span class="p">,</span> <span class="s">"dense_{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span>
                            <span class="n">dim_in</span><span class="o">=</span><span class="n">sizes</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">dim_out</span><span class="o">=</span><span class="n">sizes</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">],</span>
                            <span class="n">weight_init</span><span class="o">=</span><span class="p">(</span><span class="s">'XavierFill'</span><span class="p">,</span> <span class="p">{}),</span>
                            <span class="n">bias_init</span><span class="o">=</span><span class="p">(</span><span class="s">'ConstantFill'</span><span class="p">,</span> <span class="p">{}))</span>
            <span class="n">layer</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">relu</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">layer</span><span class="p">,</span> <span class="s">"relu_{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
        <span class="n">layer</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">fc</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">layer</span><span class="p">,</span> <span class="s">"dense_{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">sizes</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">),</span>
                        <span class="n">dim_in</span><span class="o">=</span><span class="n">sizes</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">sizes</span><span class="p">)</span> <span class="o">-</span> <span class="mi">2</span><span class="p">],</span>
                        <span class="n">dim_out</span><span class="o">=</span><span class="n">sizes</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">sizes</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span>
                        <span class="n">weight_init</span><span class="o">=</span><span class="p">(</span><span class="s">'XavierFill'</span><span class="p">,</span> <span class="p">{}),</span>
                        <span class="n">bias_init</span><span class="o">=</span><span class="p">(</span><span class="s">'ConstantFill'</span><span class="p">,</span> <span class="p">{}))</span>
        <span class="n">softmax</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">softmax</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">layer</span><span class="p">,</span> <span class="s">"softmax"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">softmax</span>

<span class="k">def</span> <span class="nf">add_accuracy_and_xent</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">):</span>
    <span class="n">accuracy</span> <span class="o">=</span> <span class="n">brew</span><span class="p">.</span><span class="n">accuracy</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="p">[</span><span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">],</span> <span class="s">'accuracy'</span><span class="p">)</span>
    <span class="n">xent</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">LabelCrossEntropy</span><span class="p">([</span><span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">],</span> <span class="s">'xent'</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">accuracy</span><span class="p">,</span> <span class="n">xent</span>

<span class="k">def</span> <span class="nf">add_training_operators</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">,</span> <span class="n">opt_type</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span><span class="n">lr</span><span class="o">=</span><span class="mf">0.0001</span><span class="p">):</span>
    <span class="n">_</span><span class="p">,</span> <span class="n">xent</span> <span class="o">=</span> <span class="n">add_accuracy_and_xent</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>
    <span class="n">loss</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">AveragedLoss</span><span class="p">(</span><span class="n">xent</span><span class="p">,</span> <span class="s">'loss'</span><span class="p">)</span>
    <span class="n">model</span><span class="p">.</span><span class="n">AddGradientOperators</span><span class="p">([</span><span class="n">loss</span><span class="p">])</span>
    <span class="k">if</span> <span class="n">opt_type</span> <span class="o">==</span> <span class="s">'adam'</span><span class="p">:</span>
        <span class="n">build_adam</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">base_learning_rate</span><span class="o">=</span><span class="n">lr</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">opt_type</span> <span class="o">==</span> <span class="s">'sgd'</span><span class="p">:</span>
        <span class="n">build_sgd</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">base_learning_rate</span><span class="o">=</span><span class="n">lr</span><span class="p">,</span> <span class="n">gamma</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
                  <span class="n">policy</span><span class="o">=</span><span class="s">'step'</span><span class="p">,</span> <span class="n">stepsize</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">opt_type</span> <span class="o">==</span> <span class="s">'adagrad'</span><span class="p">:</span>
        <span class="n">build_adagrad</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">base_learning_rate</span><span class="o">=</span><span class="n">lr</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">build_model</span><span class="p">(</span><span class="n">valid_file</span><span class="p">,</span> <span class="n">batch_size</span><span class="p">,</span> <span class="n">db_type</span><span class="p">,</span> <span class="n">sizes</span><span class="p">,</span> <span class="n">device_opts</span><span class="p">,</span> <span class="n">gpu_id</span><span class="p">,</span> <span class="n">lr</span><span class="p">,</span> <span class="n">grad_type</span><span class="o">=</span><span class="s">'sgd'</span><span class="p">):</span>
    <span class="c1"># Training model
</span>    <span class="n">train_model</span> <span class="o">=</span> <span class="n">model_helper</span><span class="p">.</span><span class="n">ModelHelper</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">"lineimage_feature_train"</span><span class="p">)</span>
    <span class="n">train_model</span><span class="p">.</span><span class="n">net</span><span class="p">.</span><span class="n">RunAllOnGPU</span><span class="p">(</span><span class="n">gpu_id</span><span class="o">=</span><span class="n">gpu_id</span><span class="p">,</span> <span class="n">use_cudnn</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">train_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">.</span><span class="n">RunAllOnGPU</span><span class="p">(</span><span class="n">gpu_id</span><span class="o">=</span><span class="n">gpu_id</span><span class="p">,</span> <span class="n">use_cudnn</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">softmax</span> <span class="o">=</span> <span class="n">add_mlp_model</span><span class="p">(</span><span class="n">train_model</span><span class="p">,</span> <span class="s">"data"</span><span class="p">,</span> <span class="n">sizes</span><span class="o">=</span><span class="n">sizes</span><span class="p">,</span> <span class="n">device_opts</span><span class="o">=</span><span class="n">device_opts</span><span class="p">)</span>
    <span class="n">add_training_operators</span><span class="p">(</span><span class="n">train_model</span><span class="p">,</span> <span class="n">softmax</span><span class="p">,</span> <span class="s">"label"</span><span class="p">,</span> <span class="n">grad_type</span><span class="p">,</span> <span class="n">lr</span><span class="p">)</span>

    <span class="c1"># validing model.
</span>    <span class="n">valid_model</span> <span class="o">=</span> <span class="n">model_helper</span><span class="p">.</span><span class="n">ModelHelper</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">"lineimage_feature_valid"</span><span class="p">,</span> <span class="n">init_params</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
    <span class="n">valid_model</span><span class="p">.</span><span class="n">net</span><span class="p">.</span><span class="n">RunAllOnGPU</span><span class="p">(</span><span class="n">gpu_id</span><span class="o">=</span><span class="n">gpu_id</span><span class="p">,</span> <span class="n">use_cudnn</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">valid_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">.</span><span class="n">RunAllOnGPU</span><span class="p">(</span><span class="n">gpu_id</span><span class="o">=</span><span class="n">gpu_id</span><span class="p">,</span> <span class="n">use_cudnn</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">data</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="n">AddInput</span><span class="p">(</span><span class="n">valid_model</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="n">batch_size</span><span class="p">,</span> <span class="n">db</span><span class="o">=</span><span class="n">valid_file</span><span class="p">,</span> <span class="n">db_type</span><span class="o">=</span><span class="n">db_type</span><span class="p">)</span>
    <span class="n">softmax</span> <span class="o">=</span> <span class="n">add_mlp_model</span><span class="p">(</span><span class="n">valid_model</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">sizes</span><span class="o">=</span><span class="n">sizes</span><span class="p">,</span> <span class="n">device_opts</span><span class="o">=</span><span class="n">device_opts</span><span class="p">)</span>
    <span class="n">add_accuracy_and_xent</span><span class="p">(</span><span class="n">valid_model</span><span class="p">,</span> <span class="n">softmax</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">train_model</span><span class="p">,</span> <span class="n">valid_model</span><span class="p">,</span> <span class="n">test_model</span>
</code></pre></div></div>

<ol>
  <li>start training your model. you need to create a <code class="language-plaintext highlighter-rouge">data</code> and <code class="language-plaintext highlighter-rouge">label</code> in the current graph <code class="language-plaintext highlighter-rouge">workspace</code> before training.</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">train</span><span class="p">(</span><span class="n">train_file</span><span class="p">,</span> <span class="n">train_counts</span><span class="p">,</span> <span class="n">valid_file</span><span class="p">,</span> <span class="n">valid_counts</span><span class="p">,</span> <span class="n">lr</span> <span class="p">,</span><span class="n">dumped_file</span><span class="p">,</span>
          <span class="n">gpu_id</span><span class="p">,</span> <span class="n">sizes</span><span class="p">,</span> <span class="n">max_epoch</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
          <span class="n">db_type</span><span class="o">=</span><span class="s">'minidb'</span><span class="p">,</span> <span class="n">grad_type</span><span class="o">=</span><span class="s">'sgd'</span><span class="p">):</span>
    <span class="c1"># Initialize train_model, test_model and deploy_model
</span>    <span class="n">device_opts</span> <span class="o">=</span> <span class="n">core</span><span class="p">.</span><span class="n">DeviceOption</span><span class="p">(</span><span class="n">caffe2_pb2</span><span class="p">.</span><span class="n">CUDA</span><span class="p">,</span> <span class="n">gpu_id</span><span class="p">)</span>
    <span class="n">data_reader</span> <span class="o">=</span> <span class="n">model_helper</span><span class="p">.</span><span class="n">ModelHelper</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">'minidb_reader'</span><span class="p">)</span>
    <span class="n">device_opts</span> <span class="o">=</span> <span class="n">core</span><span class="p">.</span><span class="n">DeviceOption</span><span class="p">(</span><span class="n">caffe2_pb2</span><span class="p">.</span><span class="n">CUDA</span><span class="p">,</span> <span class="n">gpu_id</span><span class="p">)</span>
    <span class="n">data_reader</span><span class="p">.</span><span class="n">TensorProtosDBInput</span><span class="p">([],</span> <span class="p">[</span><span class="s">'data'</span><span class="p">,</span> <span class="s">'label'</span><span class="p">],</span>
                                    <span class="n">batch_size</span><span class="o">=</span><span class="n">batch_size</span><span class="p">,</span>
                                    <span class="n">db</span><span class="o">=</span><span class="n">train_file</span><span class="p">,</span> <span class="n">db_type</span><span class="o">=</span><span class="n">db_type</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">RunNetOnce</span><span class="p">(</span><span class="n">data_reader</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">CreateNet</span><span class="p">(</span><span class="n">data_reader</span><span class="p">.</span><span class="n">net</span><span class="p">)</span>

    <span class="n">train_model</span><span class="p">,</span> <span class="n">valid_model</span> <span class="o">=</span> <span class="n">build_model</span><span class="p">(</span><span class="n">valid_file</span><span class="p">,</span><span class="n">batch_size</span><span class="o">=</span><span class="n">batch_size</span><span class="p">,</span>
                                           <span class="n">db_type</span><span class="o">=</span><span class="n">db_type</span><span class="p">,</span> <span class="n">sizes</span><span class="o">=</span><span class="n">sizes</span><span class="p">,</span><span class="n">lr</span><span class="o">=</span><span class="n">lr</span><span class="p">,</span>
                                           <span class="n">device_opts</span><span class="o">=</span><span class="n">device_opts</span><span class="p">,</span> <span class="n">gpu_id</span><span class="o">=</span><span class="n">gpu_id</span><span class="p">,</span>
                                           <span class="n">grad_type</span><span class="o">=</span><span class="n">grad_type</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">RunNetOnce</span><span class="p">(</span><span class="n">train_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">RunNetOnce</span><span class="p">(</span><span class="n">base_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">RunNetOnce</span><span class="p">(</span><span class="n">valid_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">)</span>
    <span class="c1"># creating the network
</span>    <span class="n">workspace</span><span class="p">.</span><span class="n">CreateNet</span><span class="p">(</span><span class="n">train_model</span><span class="p">.</span><span class="n">net</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">CreateNet</span><span class="p">(</span><span class="n">base_model</span><span class="p">.</span><span class="n">net</span><span class="p">)</span>
    <span class="n">workspace</span><span class="p">.</span><span class="n">CreateNet</span><span class="p">(</span><span class="n">valid_model</span><span class="p">.</span><span class="n">net</span><span class="p">)</span>
    <span class="k">print</span> <span class="s">'max epoch'</span><span class="p">,</span> <span class="n">max_epoch</span>
    <span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">max_epoch</span><span class="p">):</span>
        <span class="n">max_iters</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">train_counts</span> <span class="o">/</span> <span class="n">batch_size</span><span class="p">)</span>
        <span class="n">trainloss</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">trainacc</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">max_iters</span><span class="p">):</span>
            <span class="n">workspace</span><span class="p">.</span><span class="n">RunNet</span><span class="p">(</span><span class="n">data_reader</span><span class="p">.</span><span class="n">Proto</span><span class="p">().</span><span class="n">name</span><span class="p">)</span>
            <span class="n">X</span> <span class="o">=</span> <span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">"data"</span><span class="p">)</span>
            <span class="n">Y</span> <span class="o">=</span> <span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">"label"</span><span class="p">)</span>
            <span class="c1"># print X
</span>            <span class="n">workspace</span><span class="p">.</span><span class="n">FeedBlob</span><span class="p">(</span><span class="s">'data'</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">device_option</span><span class="o">=</span><span class="n">device_opts</span><span class="p">)</span>
            <span class="n">workspace</span><span class="p">.</span><span class="n">FeedBlob</span><span class="p">(</span><span class="s">'label'</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">device_option</span><span class="o">=</span><span class="n">device_opts</span><span class="p">)</span>
            <span class="n">workspace</span><span class="p">.</span><span class="n">RunNet</span><span class="p">(</span><span class="n">base_model</span><span class="p">.</span><span class="n">net</span><span class="p">.</span><span class="n">Proto</span><span class="p">().</span><span class="n">name</span><span class="p">)</span>
            <span class="n">trainloss</span> <span class="o">+=</span> <span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">'loss'</span><span class="p">)</span>
            <span class="n">trainacc</span> <span class="o">+=</span> <span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">'accuracy'</span><span class="p">)</span>

        <span class="k">print</span> <span class="s">"Epoch: %d, train acc: %.4f%%, train loss: %.4f"</span> <span class="o">%</span>
          <span class="p">(</span><span class="n">epoch</span><span class="p">,</span> <span class="nb">float</span><span class="p">(</span><span class="n">trainacc</span> <span class="o">*</span> <span class="mf">100.</span> <span class="o">/</span> <span class="n">max_iters</span><span class="p">),</span> <span class="nb">float</span><span class="p">(</span><span class="n">trainloss</span> <span class="o">/</span> <span class="n">max_iters</span><span class="p">)),</span>
        <span class="n">timed</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start</span>

        <span class="n">max_iters</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">valid_counts</span> <span class="o">/</span> <span class="n">batch_size</span><span class="p">)</span>
        <span class="n">validacc</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">validxent</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">max_iters</span><span class="p">):</span>
            <span class="n">workspace</span><span class="p">.</span><span class="n">RunNet</span><span class="p">(</span><span class="n">valid_model</span><span class="p">.</span><span class="n">net</span><span class="p">.</span><span class="n">Proto</span><span class="p">().</span><span class="n">name</span><span class="p">)</span>
            <span class="n">validacc</span> <span class="o">+=</span> <span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">'accuracy'</span><span class="p">)</span>
            <span class="n">validxent</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">workspace</span><span class="p">.</span><span class="n">FetchBlob</span><span class="p">(</span><span class="s">'xent'</span><span class="p">))</span>

        <span class="n">validacc</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">validacc</span> <span class="o">*</span> <span class="mf">100.</span> <span class="o">/</span> <span class="n">max_iters</span><span class="p">)</span>
        <span class="n">validxent</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">validxent</span><span class="p">).</span><span class="n">flatten</span><span class="p">())</span>
        <span class="k">print</span> <span class="s">"valid acc: %.4f%%, valid loss: %.6f"</span> <span class="o">%</span> <span class="p">(</span><span class="n">validacc</span><span class="p">,</span> <span class="n">validxent</span><span class="p">),</span>
        <span class="k">print</span> <span class="s">"Time:"</span><span class="p">,</span> <span class="n">timed</span>

    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"."</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="n">dumped_file</span><span class="p">,</span> <span class="s">'.train_net.pbtxt'</span><span class="p">]),</span> <span class="s">'w'</span><span class="p">)</span><span class="k">as</span> <span class="n">fid</span><span class="p">:</span>
        <span class="n">fid</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">train_model</span><span class="p">.</span><span class="n">Proto</span><span class="p">()))</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">"."</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="n">dumped_file</span><span class="p">,</span> <span class="s">'.train_init_net.pbtxt'</span><span class="p">]),</span> <span class="s">'w'</span><span class="p">)</span><span class="k">as</span> <span class="n">fid</span><span class="p">:</span>
        <span class="n">fid</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">train_model</span><span class="p">.</span><span class="n">param_init_net</span><span class="p">.</span><span class="n">Proto</span><span class="p">()))</span>

</code></pre></div></div>

<h4 id="references">References</h4>
<ul>
  <li><a href="https://github.com/caffe2/caffe2/issues/1404">Training models without a database file</a></li>
</ul>
:ET